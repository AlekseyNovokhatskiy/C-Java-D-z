#include "stdafx.h"
#include "Program.h"
#include "ProgramDlg.h"
#include "afxdialogex.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// диалог CProgramDlg



CProgramDlg :: CProgramDlg (CWnd * pParent / * = nullptr * /)
	: CDialog (IDD_PROGRAM_DIALOG, pParent)
{
	m_hIcon = AfxGetApp () -> LoadIcon (IDR_MAINFRAME);
}

void CProgramDlg :: DoDataExchange (CDataExchange * pDX)
{
	fg = правда;

	SetWindowTextW (L "Iaoeia aey ia? Aaico aaioa? O");

	CDialog :: DoDataExchange (PDX);
}

BEGIN_MESSAGE_MAP (CProgramDlg, CDialog)
	ON_WM_PAINT ()
	ON_WM_QUERYDRAGICON ()
END_MESSAGE_MAP ()


// обработчики сообщений CProgramDlg

BOOL CProgramDlg :: OnInitDialog ()
{
	CDialog :: OnInitDialog ();

	// Установить иконку для этого положения. Фреймворк делает это автоматически
	// когда главное окно приложения не является диалогом
	SetIcon (m_hIcon, TRUE); // Установить большую иконку
	SetIcon (m_hIcon, FALSE); // Установить маленькую иконку

	// TODO: добавить дополнительную инициализацию здесь

	вернуть ИСТИНА; // возвращаем ИСТИНА, если вы не установили фокус на элемент управления
}

// Если вы добавили кнопку минимизации в ваш диалог, вам понадобится код ниже
// нарисовать иконку. Для приложений MFC, использующих модель документа / представления,
// это автоматически делается для вас фреймворком.

void CProgramDlg :: OnPaint ()
{
	if (IsIconic ())
	{
		CPaintDC DC (это); // контекст устройства для рисования

		SendMessage (WM_ICONERASEBKGND, reinterpret_cast <WPARAM> (dc.GetSafeHdc ()), 0);

		// Центрируем иконку в прямоугольнике клиента
		int cxIcon = GetSystemMetrics (SM_CXICON);
		int cyIcon = GetSystemMetrics (SM_CYICON);
		CRect rect;
		GetClientRect (& Rect);
		int x = (rect.Width () - cxIcon + 1) / 2;
		int y = (rect.Height () - cyIcon + 1) / 2;

		// Нарисовать иконку
		dc.DrawIcon (x, y, m_hIcon);
	}
	еще
	{




		CClientDC DC (это);
		GetClientRect (& гс);

		ср = RGB (0, 0, 0);
		hPenOxy = CreatePen (PS_SOLID, 12, ср);
		hOldPen = (HPEN) SelectObject (постоянный ток, hPenOxy);

		dc.FillSolidRect (& rc, RGB (255, 255, 255));

		RH = abs (rc.left - rc.right);
		RW = abs (rc.top - rc.bottom);

		cx = RH / 2;
		cy = RW / 2;

		dx = cx / 8;
		dy = cy / 6;

		x1 = w.left = 2 * cx / 3;
		y1 = w.top = cy / 3;
		x2 = w.right = 7 * cx / 4;
		y2 = w.bottom = 5 * cy / 4;

		dc.MoveTo (x1 + 0,25 * dx, y1);
		dc.LineTo (x2, y1);
		dc.LineTo (x2, y2);

		dc.LineTo (x2 - dx, y2);
		dc.LineTo (x2 - dx, y2 + dy);
		dc.LineTo (x1 - 8 * dx / 3, y2 + dy);
		dc.LineTo (x1 - 8 * dx / 3, y2 - 2 * dy);
		dc.LineTo (x1 - 1,45 * dx, y2 - 4,5 * dy);
		dc.LineTo (x1 - 0,075 * dx, y2 - 4,5 * dy);
		dc.LineTo (x1 - 0,075 * dx, y2);
		dc.LineTo (x2, y2);
		dc.MoveTo (x1 + 0,25 * dx, y1);
		dc.LineTo (x1 + 0,25 * dx, y2);

		dc.MoveTo (x1 - 0,39 * dx, y2 - 4,1 * dy);
		dc.LineTo (x1 - 0,39 * dx, y2 - 1,1 * dy);
		dc.LineTo (x1 - 2,34 * dx, y2 - 1,1 * dy);
		dc.LineTo (x1 - 0,89 * dx, y2 - 4,1 * dy);
		dc.LineTo (x1 - 0,39 * dx, y2 - 4,1 * dy);

		int r1, r2;

		r1 = 110;
		r2 = 100;



		x1 = w.left = rc.left + 130;
		x2 = w.right = rc.right - 140;
		y1 = w.top = rc.top + 310;
		y2 = w.bottom = rc.bottom - 145;

		dc.Rectangle (& ш);
		// зеленый 
		dc.FillSolidRect (& w, RGB (0, 255, 255));




		x1 = w.left = 2 * cx / 3;
		y1 = w.top = cy / 3;
		x2 = w.right = 7 * cx / 4;
		y2 = w.bottom = 5 * cy / 4;

		х = х1 - 2,1 * дх;
		у = у2;
		dc.Ellipse (x, y, x + r1, y + r1);

		х = х1 - 2,5 * дх;
		y = y2 - dy * 0,45;
		dc.Ellipse (x + r2 / 2, y + r2 / 2, x + r2, y + r2);

		х = х2 - 4,1 * дх;
		у = у2;
		dc.Ellipse (x, y, x + r1, y + r1);

		х = х2 - 4,5 * дх;
		y = y2 - dy * 0,45;
		dc.Ellipse (x + r2 / 2, y + r2 / 2, x + r2, y + r2);




		x1 = w.left = rc.left + 265;
		x2 = w.right = rc.right - 100;
		y1 = w.top = rc.top + 85;
		y2 = w.bottom = rc.bottom - 190;

		dc.Rectangle (& ш);
		// зеленый 
		dc.FillSolidRect (& w, RGB (0, 255, 0));



		CDialog :: OnPaint ();
	}
}

// Система вызывает эту функцию, чтобы получить курсор для видения, пока пользователь перетаскивает

// свернутое окно.
HCURSOR CProgramDlg :: OnQueryDragIcon ()
{
	return static_cast <HCURSOR> (m_hIcon);
}
